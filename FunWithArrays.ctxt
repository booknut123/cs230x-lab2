#BlueJ class context
comment0.target=FunWithArrays
comment0.text=\n\ A\ class\ containing\ several\ methods\ that\ manipulate\ arrays\ of\ integers.\n\n\ @author\ CD\ for\ CS230X\ (adapated\ from\ TM)\ +\ Kailyn\ Lau\n\ @version\ F24\ v1.1\n
comment1.params=array
comment1.target=FunWithArrays(int[])
comment1.text=\ \n\ Constructor\ with\ an\ array\ of\ ints\ as\ input\n
comment2.params=array
comment2.target=void\ printArray(int[])
comment2.text=\ \n\ Prints\ the\ elements\ of\ the\ integer\ array.\n
comment3.params=
comment3.target=int\ calculateSum()
comment3.text=\n\ This\ method\ calculates\ and\ returns\ the\ sum\ of\ all\ elements\ in\ the\ array.\n\ \n\ @return\ an\ int\ representing\ the\ sum\ of\ all\ elements\ in\ the\ array\n
comment4.params=
comment4.target=double\ calculateAverage()
comment4.text=\n\ This\ method\ calculates\ and\ returns\ the\ average\ of\ all\ elements\ in\ the\ array.\n\ \n\ @return\ a\ double\ calculating\ the\ average\ (and\ 0.0\ if\ array\ is\ empty\ because\ of\ division\ by\ 0)\n
comment5.params=
comment5.target=int\ findMax()
comment5.text=\n\ This\ method\ calculates\ and\ returns\ the\ max\ of\ all\ elements\ in\ the\ array.\n\ Currently\ returns\ 0\ if\ array\ is\ empty.\ Would\ have\ to\ change\ return\ type\ to\ Integer\ object\ if\ value\ null\ is\ preferable.\n\ \n\ @return\ an\ int\ representing\ the\ max\ of\ all\ elements\ in\ the\ array\ (and\ 0\ if\ array\ is\ empty)\n
comment6.params=
comment6.target=int[]\ findMinMax()
comment6.text=\n\ This\ method\ calculates\ both\ the\ minimum\ and\ the\ maximum\ value\ in\ the\ input\ integer\ array.\ \n\ It\ returns\ a\ small\ 2-element\ integer\ array\ which\ has\ the\ minimum\ value\ stored\ at\ index\ 0\ and\ the\ maximum\ value\ at\ index\ 1.\ \ \n\ \n\ @return\ 2-element\ int[]\ of\ [min,\ max]\n
comment7.params=
comment7.target=int[]\ reverseArray()
comment7.text=\n\ This\ method\ returns\ a\ new\ array\ with\ values\ in\ reversed\ order\ from\ the\ array.\n\ \n\ @return\ a\ new\ array\ of\ myArray\ in\ reversed\ order\n
comment8.params=index
comment8.target=int[]\ removeAtPosition(int)
comment8.text=\n\ This\ method\ removes\ the\ element\ that\ appears\ on\ a\ certain\ position\ of\ the\ array.\ \n\ The\ method\ returns\ a\ new\ array,\ shorter\ in\ length\ by\ 1,\ with\ the\ element\ removed.\ \ \n\ If\ the\ input\ position\ is\ invalid,\ the\ array\ is\ returned\ without\ a\ change.\n\ \n\ @param\ index\ the\ index\ to\ be\ removed\n\ @return\ \ \ \ \ \ int[]\ with\ the\ given\ index\ removed\ (unless\ index\ is\ invalid,\ in\ which\ case\ return\ the\ same\ array)\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=10
